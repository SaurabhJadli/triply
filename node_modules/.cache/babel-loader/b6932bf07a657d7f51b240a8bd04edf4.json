{"ast":null,"code":"import React,{useState}from'react';import'./Todo.css';function Todo(){const[tasks,setTasks]=useState([]);const[inputValue,setInputValue]=useState('');const[editingTask,setEditingTask]=useState(null);const formatDate=date=>{const options={year:'numeric',month:'long',day:'numeric'};return date.toLocaleDateString(undefined,options);};const addTask=()=>{if(inputValue.trim()===''){alert('You must write something!');return;}const newTask={id:tasks.length+1,text:inputValue,isChecked:false,isEditing:false,date:new Date()};setTasks([...tasks,newTask]);setInputValue('');};const deleteTask=id=>{setTasks(tasks.filter(task=>task.id!==id));};const toggleChecked=id=>{setTasks(tasks.map(task=>task.id===id?{...task,isChecked:!task.isChecked}:task));};const editTask=id=>{const taskToEdit=tasks.find(task=>task.id===id);setInputValue(taskToEdit.text);setEditingTask(id);};const saveEdit=()=>{setTasks(tasks.map(task=>task.id===editingTask?{...task,text:inputValue,isEditing:false}:task));setInputValue('');setEditingTask(null);};const handleInputKeyPress=e=>{if(e.key==='Enter'){if(editingTask!==null){saveEdit();}else{addTask();}}};return/*#__PURE__*/React.createElement(\"div\",{className:\"todo-container\"},/*#__PURE__*/React.createElement(\"div\",{id:\"myDIV\",className:\"todo-header\"},/*#__PURE__*/React.createElement(\"h2\",{className:\"todo-h2\"},\"To Do List\"),/*#__PURE__*/React.createElement(\"input\",{className:\"todo-input\",type:\"text\",id:\"myInput\",placeholder:\"Make your list\",value:inputValue,onChange:e=>setInputValue(e.target.value),onKeyPress:handleInputKeyPress}),editingTask!==null?/*#__PURE__*/React.createElement(\"button\",{onClick:saveEdit,className:\"editBtn\"},\"Save\"):/*#__PURE__*/React.createElement(\"span\",{onClick:addTask,className:\"addBtn\"},\"Add\")),/*#__PURE__*/React.createElement(\"ul\",{id:\"myUL\",className:\"todo-ul\"},tasks.map(task=>/*#__PURE__*/React.createElement(\"li\",{key:task.id,className:task.isChecked?'checked':''},/*#__PURE__*/React.createElement(\"div\",{className:\"val\"},task.text),/*#__PURE__*/React.createElement(\"div\",{className:\"controls\"},/*#__PURE__*/React.createElement(\"span\",{onClick:()=>toggleChecked(task.id)},task.isChecked?'✔':'✓'),/*#__PURE__*/React.createElement(\"span\",{onClick:()=>editTask(task.id),className:\"edit\"},\"\\u270E\"),/*#__PURE__*/React.createElement(\"span\",{onClick:()=>deleteTask(task.id),className:\"close\"},\"\\u2716\")),/*#__PURE__*/React.createElement(\"span\",{className:\"date\"},formatDate(task.date))))));}export default Todo;","map":{"version":3,"names":["React","useState","Todo","tasks","setTasks","inputValue","setInputValue","editingTask","setEditingTask","formatDate","date","options","year","month","day","toLocaleDateString","undefined","addTask","trim","alert","newTask","id","length","text","isChecked","isEditing","Date","deleteTask","filter","task","toggleChecked","map","editTask","taskToEdit","find","saveEdit","handleInputKeyPress","e","key","createElement","className","type","placeholder","value","onChange","target","onKeyPress","onClick"],"sources":["/home/suu/Desktop/web/myTravelManager/src/plan_trip/Todo.js"],"sourcesContent":["import React, { useState } from 'react';\nimport './Todo.css';\n\nfunction Todo() {\n  const [tasks, setTasks] = useState([\n  ]);\n\n  const [inputValue, setInputValue] = useState('');\n  const [editingTask, setEditingTask] = useState(null);\n\n  const formatDate = (date) => {\n    const options = { year: 'numeric', month: 'long', day: 'numeric' };\n    return date.toLocaleDateString(undefined, options);\n  };\n\n  const addTask = () => {\n    if (inputValue.trim() === '') {\n      alert('You must write something!');\n      return;\n    }\n\n    const newTask = {\n      id: tasks.length + 1,\n      text: inputValue,\n      isChecked: false,\n      isEditing: false,\n      date: new Date()\n    };\n\n    setTasks([...tasks, newTask]);\n    setInputValue('');\n  };\n\n  const deleteTask = (id) => {\n    setTasks(tasks.filter(task => task.id !== id));\n  };\n\n  const toggleChecked = (id) => {\n    setTasks(\n      tasks.map(task => (task.id === id ? { ...task, isChecked: !task.isChecked } : task))\n    );\n  };\n\n  const editTask = (id) => {\n    const taskToEdit = tasks.find(task => task.id === id);\n    setInputValue(taskToEdit.text);\n    setEditingTask(id);\n  };\n\n  const saveEdit = () => {\n    setTasks(\n      tasks.map(task =>\n        task.id === editingTask ? { ...task, text: inputValue, isEditing: false } : task\n      )\n    );\n    setInputValue('');\n    setEditingTask(null);\n  };\n\n  const handleInputKeyPress = (e) => {\n    if (e.key === 'Enter') {\n      if (editingTask !== null) {\n        saveEdit();\n      } else {\n        addTask();\n      }\n    }\n  };\n\n  return (\n    <div className=\"todo-container\">\n      <div id=\"myDIV\" className=\"todo-header\">\n        <h2 className=\"todo-h2\">To Do List</h2>\n        <input className=\"todo-input\"\n          type=\"text\"\n          id=\"myInput\"\n          placeholder=\"Make your list\"\n          value={inputValue}\n          onChange={(e) => setInputValue(e.target.value)}\n          onKeyPress={handleInputKeyPress}\n        />\n        {editingTask !== null ? (\n          <button onClick={saveEdit} className=\"editBtn\">\n            Save\n          </button>\n        ) : (\n          <span onClick={addTask} className=\"addBtn\">\n            Add\n          </span>\n        )}\n      </div>\n\n      <ul id=\"myUL\" className=\"todo-ul\">\n        {tasks.map(task => (\n          <li key={task.id} className={task.isChecked ? 'checked' : ''}>\n            <div className=\"val\">{task.text}</div>\n            <div className=\"controls\">\n              <span onClick={() => toggleChecked(task.id)}>\n                {task.isChecked ? '✔' : '✓'}\n              </span>\n              <span onClick={() => editTask(task.id)} className=\"edit\">\n                &#9998;\n              </span>\n              <span onClick={() => deleteTask(task.id)} className=\"close\">\n                &#10006;\n              </span>\n            </div>\n            <span className=\"date\">{formatDate(task.date)}</span>\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n}\n\nexport default Todo;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}