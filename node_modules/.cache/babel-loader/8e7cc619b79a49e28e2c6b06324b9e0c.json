{"ast":null,"code":"var _jsxFileName = \"/home/suu/Desktop/web/myTravelManager/src/CountryInfo/CountryInformation.jsx\";\n// CountryInformation.js \n// This page handels country info api \n\nimport React, { useState } from 'react';\nimport './CountryInformation.css';\nimport CountryInfo from './CountryInfo';\nfunction CountryInformation() {\n  const [countryName, setCountryName] = useState('');\n  const [countryData, setCountryData] = useState(null);\n  const [error, setError] = useState('');\n  const handleSearch = () => {\n    if (!countryName) {\n      setError('The input field cannot be empty');\n      setCountryData(null);\n      return;\n    }\n    const finalURL = `https://restcountries.com/v3.1/name/${countryName.trim()}?fullText=true`;\n    fetch(finalURL).then(response => response.json()).then(data => {\n      if (data.message === \"Not Found\") {\n        setError(\"Country Information is not Found\");\n        setCountryData(null);\n      } else if (data.length === 0) {\n        setError('Please enter a valid country name.');\n        setCountryData(null);\n      } else {\n        setError('');\n        setCountryData(data[0]);\n      }\n    }).catch(() => {\n      setError('An error occurred while fetching data.');\n      setCountryData(null);\n    });\n  };\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 3\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"search\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 4\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    id: \"countryName\",\n    placeholder: \"Enter a country name here...\",\n    value: countryName,\n    onChange: e => setCountryName(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 5\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    id: \"search-btn\",\n    onClick: handleSearch,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 5\n    }\n  }, \"Search\")), /*#__PURE__*/React.createElement(\"div\", {\n    id: \"result\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 4\n    }\n  }, error && /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 15\n    }\n  }, error), countryData && /*#__PURE__*/React.createElement(CountryInfo, {\n    countryData: countryData,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 22\n    }\n  })));\n}\nexport default CountryInformation;","map":{"version":3,"names":["React","useState","CountryInfo","CountryInformation","countryName","setCountryName","countryData","setCountryData","error","setError","handleSearch","finalURL","trim","fetch","then","response","json","data","message","length","catch","createElement","className","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","type","id","placeholder","value","onChange","e","target","onClick"],"sources":["/home/suu/Desktop/web/myTravelManager/src/CountryInfo/CountryInformation.jsx"],"sourcesContent":["// CountryInformation.js \n// This page handels country info api \n\nimport React, { useState } from 'react'; \nimport './CountryInformation.css'; \nimport CountryInfo from './CountryInfo'; \n\nfunction CountryInformation() { \n\tconst [countryName, setCountryName] = useState(''); \n\tconst [countryData, setCountryData] = useState(null); \n\tconst [error, setError] = useState(''); \n\n\tconst handleSearch = () => { \n\t\tif (!countryName) { \n\t\t\tsetError('The input field cannot be empty'); \n\t\t\tsetCountryData(null); \n\t\t\treturn; \n\t\t} \n\n\t\tconst finalURL = `https://restcountries.com/v3.1/name/${countryName.trim()}?fullText=true`; \n\t\tfetch(finalURL) \n\t\t\t.then((response) => response.json()) \n\t\t\t.then((data) => { \n\t\t\t\tif(data.message === \"Not Found\"){ \n\t\t\t\t\tsetError(\"Country Information is not Found\"); \n\t\t\t\t\tsetCountryData(null); \n\t\t\t\t}else if (data.length === 0) { \n\t\t\t\t\tsetError('Please enter a valid country name.'); \n\t\t\t\t\tsetCountryData(null); \n\t\t\t\t} else { \n\t\t\t\t\tsetError(''); \n\t\t\t\t\tsetCountryData(data[0]); \n\t\t\t\t} \n\t\t\t}) \n\t\t\t.catch(() => { \n\t\t\t\tsetError('An error occurred while fetching data.'); \n\t\t\t\tsetCountryData(null); \n\t\t\t}); \n\t}; \n\n\treturn ( \n\t\t<div className=\"container\"> \n\t\t\t<div className=\"search\"> \n\t\t\t\t<input \n\t\t\t\t\ttype=\"text\"\n\t\t\t\t\tid=\"countryName\"\n\t\t\t\t\tplaceholder=\"Enter a country name here...\"\n\t\t\t\t\tvalue={countryName} \n\t\t\t\t\tonChange={(e) => setCountryName(e.target.value)} \n\t\t\t\t/> \n\t\t\t\t<button id=\"search-btn\" onClick={handleSearch}> \n\t\t\t\t\tSearch \n\t\t\t\t</button> \n\t\t\t</div> \n\t\t\t<div id=\"result\"> \n\t\t\t\t{error && <h3>{error}</h3>} \n\t\t\t\t{countryData && (<CountryInfo countryData={countryData} />)} \n\t\t\t</div> \n\t\t</div> \n\t); \n} \n\nexport default CountryInformation; \n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}